# El presente archivo realizaremos diferentes consultas SparQL

# 1. Mostraremos las 50 primeras tripletas almacenadas en la tabla 

SELECT * 

WHERE{

    ?subject ?predicate ?object .

}

LIMIT 50

# 2. Mostrar de las 25 primeras tripletas almacenadas en la tabla el sujeto y objeto (usaremos wdt:titulo)

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?subject ?predicate ?object 

WHERE{

    
    ?subject wdt:titulo ?object .

}

LIMIT 25

# 3. Mostrar el titulo, tema y autor si es que tiene de 50 obras

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?titulo ?tema ?autor

WHERE{

	?obra wdt:titulo ?titulo . # Buscamos obras que tengan propiedad titulo
	?obra wdt:tema ?tema . # Buscamos obras que tengan propiedad tema
	
	OPTIONAL{ ?obra wdt:autor ?autor . } # Buscamos obras que puedan tener como propiedad autor
}

LIMIT 50

# 4. Mostraremos solo obras que tengan el titulo en español y que tengan necesariamente datos como autor, tema y opcionalmente que tenga
# datos como revista y fecha de publicación 

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?titulo ?tema ?autor ?revista ?fechaPublicacion 

WHERE{

	?x wdt:titulo ?titulo . # Buscamos obras que tengan propiedad titulo
	?x wdt:tema ?tema . # Buscamos obras que tengan propiedad tema
	?x wdt:autor ?autor . # Buscamos obras que tengan propiedad autor

	OPTIONAL{ ?x wdt:revista ?revista . } # Buscamos obras que puedan tener como propiedad revista
	OPTIONAL{ ?x wdt:fecha ?fechaPublicacion . } # Buscamos obras que puedan tener como propiedad fecha de publiación
	
	FILTER (langMatches( lang(?titulo), "es" )) . # Filtra los titulos que estén en español usando el literal
}

# 5. Mostrar las obras que tengan titulo, autor y como uno de sus temas principales Inteligencia Artificials.
# Ordene la tabla por el nombre del titulo devuelva los valores que están del quinto al décimo elemento

PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT DISTINCT ?titulo ?tema ?autor
WHERE{

	?obra wdt:titulo ?titulo .  # Buscamos obras que tengan propiedad titulo
	?obra wdt:autor ?autor .  # Buscamos obras que tengan propiedad autor
	?obra wdt:tema ?tema .  # Buscamos obras que tengan propiedad tema
	?obra wdt:tema "inteligencia artificial"@es .  # Buscamos obras que tengan propiedad tema y que este sea inteligencia artificial

	
}
ORDER BY ?titulo
OFFSET 5 # Te indica el inicio a contar de las tripletas
LIMIT 5 # Solo muestra cinco elementos

# 6. Realizar una busqueda que te muestre títulos, tema  y opcionalmente autores, la url a la pagina de estos 
# y si es que alguna revista los ha públicado. Además mostrara la fecha de publicación
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX wd: <http://www.wikidata.org/entity/> 
PREFIX wdt: <http://www.wikidata.org/prop/direct/> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>

SELECT ?obra ?titulo ?autor ?tema ?revista ?url ?fecha

WHERE{

	?obra wdt:titulo ?titulo ;  # Buscamos obras que tengan propiedad titulo
	      wdt:tema ?tema .  # Buscamos obras que tengan propiedad tema
	
	OPTIONAL{ ?obra wdt:autor ?autor . }  # Buscamos obras que puedan tener como propiedad autor
	OPTIONAL{ ?obra wdt:revista ?revista . } # Buscamos obras que puedan tener como propiedad revista
	OPTIONAL{ ?obra wdt:url ?url . } # Buscamos obras que puedan tener como propiedad url
	OPTIONAL{ ?obra wdt:fecha ?fecha . } # Buscamos obras que puedan tener como propiedad url y que su año de publicación este entre el 2000 y 2020

	FILTER ( "2000-01-01T00:00:00Z"^^xsd:dateTime <= ?fecha && ?fecha < "2020-01-01T00:00:00Z"^^xsd:dateTime ) .

	# Opcional: Mostrar como funciona la UNION
	
	# Estas dos consultas no se pueden hacer juntas a no ser que se use UNION
	#wd:Q98148869 wdt:titulo ?titulo .
	#wd:Q79454483 wdt:titulo ?titulo .
	
	#{ wd:Q98148869 wdt:titulo ?titulo . }
	#UNION
	#{ wd:Q79454483 wdt:titulo ?titulo . }	
}
ORDER BY DESC (?fecha)
